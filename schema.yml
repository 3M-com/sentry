openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/0/organizations/{organization_slug}/scim/v2/Users:
    get:
      operationId: List an Organization's Members
      description: Returns a paginated list of members bound to a organization with
        a SCIM Users GET Request.
      parameters:
      - in: query
        name: count
        schema:
          type: integer
          minimum: 0
          default: 100
      - in: query
        name: excludedAttributes
        schema:
          type: array
          items:
            type: string
          default: []
      - in: query
        name: filter
        schema:
          type: string
      - in: path
        name: organization_slug
        schema:
          type: string
        description: The slug of the organization the resource belongs to.
        required: true
      - in: query
        name: startIndex
        schema:
          type: integer
          minimum: 1
          default: 1
      tags:
      - SCIM
      security:
      - auth_token:
        - member:write
        - member:read
        - member:admin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMListResponse'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      operationId: Provision a New Organization Member
      description: |-
        Create a new Organization Member via a SCIM Users POST Request.
        `userName` should be set to the SAML field used for email, and active should be set to `true`.
        Sentry's SCIM API doesn't currently support setting users to inactive and the member will be deleted
        if inactive is set to `false`. The API also does not support setting secondary emails.
      parameters:
      - in: path
        name: organization_slug
        schema:
          type: string
        description: The slug of the organization the resource belongs to.
        required: true
      tags:
      - SCIM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
            examples:
              SuccessfulResponse:
                value:
                  schemas:
                  - urn:ietf:params:scim:schemas:core:2.0:User
                  id: '102'
                  userName: test.user@okta.local
                  emails:
                  - primary: true
                    value: test.user@okta.local
                    type: work
                  name:
                    familyName: N/A
                    givenName: N/A
                  active: true
                  meta:
                    resourceType: User
                summary: Successful response
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationMemberRequest'
        required: true
      security:
      - auth_token:
        - member:write
        - member:admin
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMemberSCIM'
              examples:
                SuccessfulResponse:
                  value:
                    schemas:
                    - urn:ietf:params:scim:schemas:core:2.0:User
                    id: '102'
                    userName: test.user@okta.local
                    emails:
                    - primary: true
                      value: test.user@okta.local
                      type: work
                    name:
                      familyName: N/A
                      givenName: N/A
                    active: true
                    meta:
                      resourceType: User
                  summary: Successful response
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/0/organizations/{organization_slug}/scim/v2/Users/{member_id}:
    get:
      operationId: Query an Individual Organization Member
      description: |-
        Query an individual organization member with a SCIM User GET Request.
        - The `name` object will contain fields `firstName` and `lastName` with the values of `N/A`.
        Sentry's SCIM API does not currently support these fields but returns them for compatibility purposes.
      parameters:
      - in: path
        name: member_id
        schema:
          type: integer
        description: The id of the member you'd like to query.
        required: true
      - in: path
        name: organization_slug
        schema:
          type: string
        description: The slug of the organization the resource belongs to.
        required: true
      tags:
      - SCIM
      security:
      - auth_token:
        - member:write
        - member:read
        - member:admin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMemberSCIM'
              examples:
                SuccessfulResponse:
                  value:
                    schemas:
                    - urn:ietf:params:scim:schemas:core:2.0:User
                    id: '102'
                    userName: test.user@okta.local
                    emails:
                    - primary: true
                      value: test.user@okta.local
                      type: work
                    name:
                      familyName: N/A
                      givenName: N/A
                    active: true
                    meta:
                      resourceType: User
                  summary: Successful response
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/0/projects/{organization_slug}/{project_slug}/events/:
    get:
      operationId: List a Project's Events
      description: |-
        Return a list of events bound to a project.

        Note: This endpoint is experimental and may be removed without notice.

        :qparam bool full: if this is set to true then the event payload will
                           include the full event body, including the stacktrace.
                           Set to 1 to enable.

        :pparam string organization_slug: the slug of the organization the
                                          groups belong to.
        :pparam string project_slug: the slug of the project the groups
                                     belong to.
      parameters:
      - in: query
        name: full
        schema:
          type: boolean
        description: if this is set to true then the event payload willinclude the
          full event body, including the stacktrace.Set to 1 to enable.
        required: true
      - in: path
        name: organization_slug
        schema:
          type: string
        description: The slug of the organization the resource belongs to.
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
        description: The slug of the project the resource belongs to.
        required: true
      tags:
      - projects
      security:
      - auth_token:
        - project:read
        - project:write
        - project:admin
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    OrganizationMemberRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 75
        role:
          $ref: '#/components/schemas/RoleEnum'
        teams:
          type: array
          items: {}
          default: []
        sendInvite:
          type: boolean
          writeOnly: true
          default: true
      required:
      - email
      - role
    OrganizationMemberSCIM:
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
        id:
          type: string
        userName:
          type: string
        name:
          type: object
          properties:
            givenName:
              type: string
            familyName:
              type: string
          required:
          - familyName
          - givenName
          description: ''
        emails:
          type: array
          items:
            type: object
            properties:
              primary:
                type: boolean
              value:
                type: string
              type:
                type: string
            required:
            - type
            - value
            - primary
            description: ''
        active:
          type: boolean
        meta:
          type: object
          properties:
            resourceType:
              type: string
          required:
          - resourceType
          description: ''
      required:
      - emails
      - id
      - userName
      - schemas
      - meta
      - name
      description: ''
    RoleEnum:
      enum:
      - member
      - admin
      - manager
      - owner
      type: string
    SCIMListResponse:
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
        total_results:
          type: integer
        start_index:
          type: string
        items_per_page:
          type: integer
        resources:
          type: array
          items:
            type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
              id:
                type: string
              userName:
                type: string
              name:
                type: object
                properties:
                  givenName:
                    type: string
                  familyName:
                    type: string
                required:
                - familyName
                - givenName
                description: ''
              emails:
                type: array
                items:
                  type: object
                  properties:
                    primary:
                      type: boolean
                    value:
                      type: string
                    type:
                      type: string
                  required:
                  - type
                  - value
                  - primary
                  description: ''
              active:
                type: boolean
              meta:
                type: object
                properties:
                  resourceType:
                    type: string
                required:
                - resourceType
                description: ''
            required:
            - emails
            - id
            - userName
            - schemas
            - meta
            - name
            description: ''
      required:
      - schemas
      - start_index
      - total_results
      - resources
      - items_per_page
      description: ''
  securitySchemes:
    auth_token:
      type: http
      scheme: bearer
